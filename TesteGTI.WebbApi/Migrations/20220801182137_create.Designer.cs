// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteGTI.WebbApi.Data;

namespace TesteGTI.WebbApi.Migrations
{
    [DbContext(typeof(TesteGTIDbContext))]
    [Migration("20220801182137_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteGTI.WebbApi.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime?>("DataExpedicaoRG")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgaoExpedicaoRG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("TesteGTI.WebbApi.Entidades.EnderecoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("TesteGTI.WebbApi.Entidades.EstadoCivil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoCivil");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Casado(a)"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Solteiro(a)"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Viúvo(a)"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Divorciado(a)"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "União Estável"
                        });
                });

            modelBuilder.Entity("TesteGTI.WebbApi.Entidades.SexoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SexoCliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Feminino"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Masculino"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Prefiro não declarar"
                        });
                });

            modelBuilder.Entity("TesteGTI.WebbApi.Entidades.UFs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UFs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "AC"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "AL"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "AP"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "AM"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "BA"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "CE"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "DF"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "ES"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "GO"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "MA"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "MT"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "MS"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "MG"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "PA"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "PB"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "PR"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "PE"
                        },
                        new
                        {
                            Id = 18,
                            Nome = "PI"
                        },
                        new
                        {
                            Id = 19,
                            Nome = "RJ"
                        },
                        new
                        {
                            Id = 20,
                            Nome = "RN"
                        },
                        new
                        {
                            Id = 21,
                            Nome = "RS"
                        },
                        new
                        {
                            Id = 22,
                            Nome = "RO"
                        },
                        new
                        {
                            Id = 23,
                            Nome = "RR"
                        },
                        new
                        {
                            Id = 24,
                            Nome = "SC"
                        },
                        new
                        {
                            Id = 25,
                            Nome = "SP"
                        },
                        new
                        {
                            Id = 26,
                            Nome = "SE"
                        },
                        new
                        {
                            Id = 27,
                            Nome = "TO"
                        });
                });

            modelBuilder.Entity("TesteGTI.WebbApi.Entidades.EnderecoCliente", b =>
                {
                    b.HasOne("TesteGTI.WebbApi.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
